//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Cn.Com.Sve.OA.Entities
{
    public partial class EmploymentCompany
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Type
        {
            get;
            set;
        }
    
        public virtual string Important
        {
            get;
            set;
        }
    
        public virtual string Website
        {
            get;
            set;
        }
    
        public virtual string Telephone
        {
            get;
            set;
        }
    
        public virtual string Fax
        {
            get;
            set;
        }
    
        public virtual string Address
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CityId
        {
            get { return _cityId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_cityId != value)
                    {
                        if (City != null && City.Id != value)
                        {
                            City = null;
                        }
                        _cityId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _cityId;
    
        public virtual string Introduction
        {
            get;
            set;
        }
    
        public virtual string SourceType
        {
            get;
            set;
        }
    
        public virtual string Referer
        {
            get;
            set;
        }
    
        public virtual Nullable<int> UserId
        {
            get { return _userId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_userId != value)
                    {
                        if (User != null && User.Id != value)
                        {
                            User = null;
                        }
                        _userId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _userId;
    
        public virtual int EmployedQty
        {
            get;
            set;
        }
    
        public virtual string OldOaId
        {
            get;
            set;
        }
    
        public virtual string TempProvId
        {
            get;
            set;
        }
    
        public virtual string TempProvName
        {
            get;
            set;
        }
    
        public virtual string TempCityId
        {
            get;
            set;
        }
    
        public virtual string TempCityName
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> AddTime
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual City City
        {
            get { return _city; }
            set
            {
                if (!ReferenceEquals(_city, value))
                {
                    var previousValue = _city;
                    _city = value;
                    FixupCity(previousValue);
                }
            }
        }
        private City _city;
    
        public virtual User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private User _user;
    
        public virtual ICollection<EmploymentCompanyContact> Contact
        {
            get
            {
                if (_contact == null)
                {
                    var newCollection = new FixupCollection<EmploymentCompanyContact>();
                    newCollection.CollectionChanged += FixupContact;
                    _contact = newCollection;
                }
                return _contact;
            }
            set
            {
                if (!ReferenceEquals(_contact, value))
                {
                    var previousValue = _contact as FixupCollection<EmploymentCompanyContact>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupContact;
                    }
                    _contact = value;
                    var newValue = value as FixupCollection<EmploymentCompanyContact>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupContact;
                    }
                }
            }
        }
        private ICollection<EmploymentCompanyContact> _contact;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCity(City previousValue)
        {
            if (previousValue != null && previousValue.Employment_Company.Contains(this))
            {
                previousValue.Employment_Company.Remove(this);
            }
    
            if (City != null)
            {
                if (!City.Employment_Company.Contains(this))
                {
                    City.Employment_Company.Add(this);
                }
                if (CityId != City.Id)
                {
                    CityId = City.Id;
                }
            }
            else if (!_settingFK)
            {
                CityId = null;
            }
        }
    
        private void FixupUser(User previousValue)
        {
            if (previousValue != null && previousValue.Employment_Company.Contains(this))
            {
                previousValue.Employment_Company.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.Employment_Company.Contains(this))
                {
                    User.Employment_Company.Add(this);
                }
                if (UserId != User.Id)
                {
                    UserId = User.Id;
                }
            }
            else if (!_settingFK)
            {
                UserId = null;
            }
        }
    
        private void FixupContact(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EmploymentCompanyContact item in e.NewItems)
                {
                    item.Company = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EmploymentCompanyContact item in e.OldItems)
                {
                    if (ReferenceEquals(item.Company, this))
                    {
                        item.Company = null;
                    }
                }
            }
        }

        #endregion

    }
}
