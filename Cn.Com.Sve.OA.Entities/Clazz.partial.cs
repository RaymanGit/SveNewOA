//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Cn.Com.Sve.OA.Entities
{
    public partial class Clazz
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Semester
        {
            get;
            set;
        }
    
        public virtual int StudentQty
        {
            get;
            set;
        }
    
        public virtual int LimitedQty
        {
            get;
            set;
        }
    
        public virtual string TeacherA
        {
            get;
            set;
        }
    
        public virtual string TeacherB
        {
            get;
            set;
        }
    
        public virtual string Master
        {
            get;
            set;
        }
    
        public virtual string Governor
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> OpenDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> ClosedDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> FinishedDate
        {
            get;
            set;
        }
    
        public virtual bool IsOpen
        {
            get;
            set;
        }
    
        public virtual bool IsClosed
        {
            get;
            set;
        }
    
        public virtual bool IsFinished
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreateTime
        {
            get;
            set;
        }
    
        public virtual System.DateTime UpdateTime
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> KickOffDate
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<Student> Student
        {
            get
            {
                if (_student == null)
                {
                    var newCollection = new FixupCollection<Student>();
                    newCollection.CollectionChanged += FixupStudent;
                    _student = newCollection;
                }
                return _student;
            }
            set
            {
                if (!ReferenceEquals(_student, value))
                {
                    var previousValue = _student as FixupCollection<Student>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent;
                    }
                    _student = value;
                    var newValue = value as FixupCollection<Student>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent;
                    }
                }
            }
        }
        private ICollection<Student> _student;
    
        public virtual ICollection<Customer> Marketing_Customer_1
        {
            get
            {
                if (_marketing_Customer_1 == null)
                {
                    var newCollection = new FixupCollection<Customer>();
                    newCollection.CollectionChanged += FixupMarketing_Customer_1;
                    _marketing_Customer_1 = newCollection;
                }
                return _marketing_Customer_1;
            }
            set
            {
                if (!ReferenceEquals(_marketing_Customer_1, value))
                {
                    var previousValue = _marketing_Customer_1 as FixupCollection<Customer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMarketing_Customer_1;
                    }
                    _marketing_Customer_1 = value;
                    var newValue = value as FixupCollection<Customer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMarketing_Customer_1;
                    }
                }
            }
        }
        private ICollection<Customer> _marketing_Customer_1;
    
        public virtual ICollection<StudentTeleVisitRecord> Student_TeleVisitRecord
        {
            get
            {
                if (_student_TeleVisitRecord == null)
                {
                    var newCollection = new FixupCollection<StudentTeleVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_TeleVisitRecord;
                    _student_TeleVisitRecord = newCollection;
                }
                return _student_TeleVisitRecord;
            }
            set
            {
                if (!ReferenceEquals(_student_TeleVisitRecord, value))
                {
                    var previousValue = _student_TeleVisitRecord as FixupCollection<StudentTeleVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_TeleVisitRecord;
                    }
                    _student_TeleVisitRecord = value;
                    var newValue = value as FixupCollection<StudentTeleVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_TeleVisitRecord;
                    }
                }
            }
        }
        private ICollection<StudentTeleVisitRecord> _student_TeleVisitRecord;
    
        public virtual ICollection<StudentVisitRecord> Student_VisitRecord
        {
            get
            {
                if (_student_VisitRecord == null)
                {
                    var newCollection = new FixupCollection<StudentVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_VisitRecord;
                    _student_VisitRecord = newCollection;
                }
                return _student_VisitRecord;
            }
            set
            {
                if (!ReferenceEquals(_student_VisitRecord, value))
                {
                    var previousValue = _student_VisitRecord as FixupCollection<StudentVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_VisitRecord;
                    }
                    _student_VisitRecord = value;
                    var newValue = value as FixupCollection<StudentVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_VisitRecord;
                    }
                }
            }
        }
        private ICollection<StudentVisitRecord> _student_VisitRecord;
    
        public virtual ICollection<StudentHomeVisitRecord> Student_HomeVisitRecord
        {
            get
            {
                if (_student_HomeVisitRecord == null)
                {
                    var newCollection = new FixupCollection<StudentHomeVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_HomeVisitRecord;
                    _student_HomeVisitRecord = newCollection;
                }
                return _student_HomeVisitRecord;
            }
            set
            {
                if (!ReferenceEquals(_student_HomeVisitRecord, value))
                {
                    var previousValue = _student_HomeVisitRecord as FixupCollection<StudentHomeVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_HomeVisitRecord;
                    }
                    _student_HomeVisitRecord = value;
                    var newValue = value as FixupCollection<StudentHomeVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_HomeVisitRecord;
                    }
                }
            }
        }
        private ICollection<StudentHomeVisitRecord> _student_HomeVisitRecord;
    
        public virtual ICollection<StudentChangeClazzLog> Student_ChangeClazzLog
        {
            get
            {
                if (_student_ChangeClazzLog == null)
                {
                    var newCollection = new FixupCollection<StudentChangeClazzLog>();
                    newCollection.CollectionChanged += FixupStudent_ChangeClazzLog;
                    _student_ChangeClazzLog = newCollection;
                }
                return _student_ChangeClazzLog;
            }
            set
            {
                if (!ReferenceEquals(_student_ChangeClazzLog, value))
                {
                    var previousValue = _student_ChangeClazzLog as FixupCollection<StudentChangeClazzLog>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_ChangeClazzLog;
                    }
                    _student_ChangeClazzLog = value;
                    var newValue = value as FixupCollection<StudentChangeClazzLog>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_ChangeClazzLog;
                    }
                }
            }
        }
        private ICollection<StudentChangeClazzLog> _student_ChangeClazzLog;
    
        public virtual ICollection<StudentChangeClazzLog> Student_ChangeClazzLog1
        {
            get
            {
                if (_student_ChangeClazzLog1 == null)
                {
                    var newCollection = new FixupCollection<StudentChangeClazzLog>();
                    newCollection.CollectionChanged += FixupStudent_ChangeClazzLog1;
                    _student_ChangeClazzLog1 = newCollection;
                }
                return _student_ChangeClazzLog1;
            }
            set
            {
                if (!ReferenceEquals(_student_ChangeClazzLog1, value))
                {
                    var previousValue = _student_ChangeClazzLog1 as FixupCollection<StudentChangeClazzLog>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_ChangeClazzLog1;
                    }
                    _student_ChangeClazzLog1 = value;
                    var newValue = value as FixupCollection<StudentChangeClazzLog>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_ChangeClazzLog1;
                    }
                }
            }
        }
        private ICollection<StudentChangeClazzLog> _student_ChangeClazzLog1;

        #endregion

        #region Association Fixup
    
        private void FixupStudent(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Student item in e.NewItems)
                {
                    item.Clazz = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Student item in e.OldItems)
                {
                    if (ReferenceEquals(item.Clazz, this))
                    {
                        item.Clazz = null;
                    }
                }
            }
        }
    
        private void FixupMarketing_Customer_1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Customer item in e.NewItems)
                {
                    item.InClazz = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Customer item in e.OldItems)
                {
                    if (ReferenceEquals(item.InClazz, this))
                    {
                        item.InClazz = null;
                    }
                }
            }
        }
    
        private void FixupStudent_TeleVisitRecord(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentTeleVisitRecord item in e.NewItems)
                {
                    item.Clazz = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentTeleVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Clazz, this))
                    {
                        item.Clazz = null;
                    }
                }
            }
        }
    
        private void FixupStudent_VisitRecord(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentVisitRecord item in e.NewItems)
                {
                    item.Clazz = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Clazz, this))
                    {
                        item.Clazz = null;
                    }
                }
            }
        }
    
        private void FixupStudent_HomeVisitRecord(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentHomeVisitRecord item in e.NewItems)
                {
                    item.Clazz = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentHomeVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Clazz, this))
                    {
                        item.Clazz = null;
                    }
                }
            }
        }
    
        private void FixupStudent_ChangeClazzLog(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentChangeClazzLog item in e.NewItems)
                {
                    item.OldClazz = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentChangeClazzLog item in e.OldItems)
                {
                    if (ReferenceEquals(item.OldClazz, this))
                    {
                        item.OldClazz = null;
                    }
                }
            }
        }
    
        private void FixupStudent_ChangeClazzLog1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentChangeClazzLog item in e.NewItems)
                {
                    item.NewClazz = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentChangeClazzLog item in e.OldItems)
                {
                    if (ReferenceEquals(item.NewClazz, this))
                    {
                        item.NewClazz = null;
                    }
                }
            }
        }

        #endregion

    }
}
