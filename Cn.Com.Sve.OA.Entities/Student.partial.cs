//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Cn.Com.Sve.OA.Entities
{
    public partial class Student
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string PinYin
        {
            get;
            set;
        }
    
        public virtual string Gender
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> Birthday
        {
            get;
            set;
        }
    
        public virtual string EduLevel
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> GraduateDate
        {
            get;
            set;
        }
    
        public virtual Nullable<int> Score
        {
            get;
            set;
        }
    
        public virtual Nullable<int> GruduateSchoolId
        {
            get { return _gruduateSchoolId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_gruduateSchoolId != value)
                    {
                        if (GruduateSchool != null && GruduateSchool.Id != value)
                        {
                            GruduateSchool = null;
                        }
                        _gruduateSchoolId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _gruduateSchoolId;
    
        public virtual string Profession
        {
            get;
            set;
        }
    
        public virtual string IdCardNo
        {
            get;
            set;
        }
    
        public virtual string HuKouType
        {
            get;
            set;
        }
    
        public virtual string Address
        {
            get;
            set;
        }
    
        public virtual string Postcode
        {
            get;
            set;
        }
    
        public virtual string FeeSource
        {
            get;
            set;
        }
    
        public virtual Nullable<int> SmallInfoSourceId
        {
            get { return _smallInfoSourceId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_smallInfoSourceId != value)
                    {
                        if (InfoSourceSmall != null && InfoSourceSmall.Id != value)
                        {
                            InfoSourceSmall = null;
                        }
                        _smallInfoSourceId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _smallInfoSourceId;
    
        public virtual string QQ
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual string Mobile
        {
            get;
            set;
        }
    
        public virtual string HomeTelephone
        {
            get;
            set;
        }
    
        public virtual string OfficeTelephone
        {
            get;
            set;
        }
    
        public virtual string MemberRelType1
        {
            get;
            set;
        }
    
        public virtual string MemberName1
        {
            get;
            set;
        }
    
        public virtual string MemberCompany1
        {
            get;
            set;
        }
    
        public virtual string MemberPosition1
        {
            get;
            set;
        }
    
        public virtual string MemberMobile1
        {
            get;
            set;
        }
    
        public virtual string MemberRelType2
        {
            get;
            set;
        }
    
        public virtual string MemberName2
        {
            get;
            set;
        }
    
        public virtual string MemberCompany2
        {
            get;
            set;
        }
    
        public virtual string MemberPosition2
        {
            get;
            set;
        }
    
        public virtual string MemberMobile2
        {
            get;
            set;
        }
    
        public virtual string MemberRelType3
        {
            get;
            set;
        }
    
        public virtual string MemberName3
        {
            get;
            set;
        }
    
        public virtual string MemberCompany3
        {
            get;
            set;
        }
    
        public virtual string MemberPosition3
        {
            get;
            set;
        }
    
        public virtual string MemberMobile3
        {
            get;
            set;
        }
    
        public virtual string MemberRelType4
        {
            get;
            set;
        }
    
        public virtual string MemberName4
        {
            get;
            set;
        }
    
        public virtual string MemberCompany4
        {
            get;
            set;
        }
    
        public virtual string MemberPosition4
        {
            get;
            set;
        }
    
        public virtual string MemberMobile4
        {
            get;
            set;
        }
    
        public virtual string WorkState
        {
            get;
            set;
        }
    
        public virtual string StudyDuration1
        {
            get;
            set;
        }
    
        public virtual string StudySchool1
        {
            get;
            set;
        }
    
        public virtual string StudyPosition1
        {
            get;
            set;
        }
    
        public virtual string StudyDuration2
        {
            get;
            set;
        }
    
        public virtual string StudySchool2
        {
            get;
            set;
        }
    
        public virtual string StudyPosition2
        {
            get;
            set;
        }
    
        public virtual string StudyDuration3
        {
            get;
            set;
        }
    
        public virtual string StudySchool3
        {
            get;
            set;
        }
    
        public virtual string StudyPosition3
        {
            get;
            set;
        }
    
        public virtual string SoftwareExp
        {
            get;
            set;
        }
    
        public virtual string ProgramExp
        {
            get;
            set;
        }
    
        public virtual string NetworkExp
        {
            get;
            set;
        }
    
        public virtual string RelCourse
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DistrictId
        {
            get { return _districtId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_districtId != value)
                    {
                        if (District != null && District.Id != value)
                        {
                            District = null;
                        }
                        _districtId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _districtId;
    
        public virtual string IntentCity
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ClazzId
        {
            get { return _clazzId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_clazzId != value)
                    {
                        if (Clazz != null && Clazz.Id != value)
                        {
                            Clazz = null;
                        }
                        _clazzId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _clazzId;
    
        public virtual string StudentNo
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> InSchoolDate
        {
            get;
            set;
        }
    
        public virtual string IsDorm
        {
            get;
            set;
        }
    
        public virtual string DormNo
        {
            get;
            set;
        }
    
        public virtual string GiveCourseware
        {
            get;
            set;
        }
    
        public virtual string Consultants
        {
            get;
            set;
        }
    
        public virtual string Remark
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreateTime
        {
            get;
            set;
        }
    
        public virtual System.DateTime LastUpdateTime
        {
            get;
            set;
        }
    
        public virtual string IsGetQualification
        {
            get;
            set;
        }
    
        public virtual string Status
        {
            get;
            set;
        }
    
        public virtual string TechnicalWay
        {
            get;
            set;
        }
    
        public virtual string NeedObtainWork
        {
            get;
            set;
        }
    
        public virtual string IntentPosition
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> TargetSalary
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> InsuranceStartDate
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> InsuranceEndDate
        {
            get;
            set;
        }
    
        public virtual string GaoKaoBatch
        {
            get;
            set;
        }
    
        public virtual string GiveNotebook
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> MaxSalary
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> CurrentSalary
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> FirstSalary
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> BeginSchoolTime
        {
            get;
            set;
        }
    
        public virtual string MasterName1
        {
            get;
            set;
        }
    
        public virtual string MasterName2
        {
            get;
            set;
        }
    
        public virtual string MasterName3
        {
            get;
            set;
        }
    
        public virtual string TeacherName1
        {
            get;
            set;
        }
    
        public virtual string TeacherName2
        {
            get;
            set;
        }
    
        public virtual string TeacherName3
        {
            get;
            set;
        }
    
        public virtual Nullable<int> MasterId1
        {
            get { return _masterId1; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_masterId1 != value)
                    {
                        if (Master1 != null && Master1.Id != value)
                        {
                            Master1 = null;
                        }
                        _masterId1 = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _masterId1;
    
        public virtual Nullable<int> MasterId2
        {
            get { return _masterId2; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_masterId2 != value)
                    {
                        if (Master2 != null && Master2.Id != value)
                        {
                            Master2 = null;
                        }
                        _masterId2 = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _masterId2;
    
        public virtual Nullable<int> MasterId3
        {
            get { return _masterId3; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_masterId3 != value)
                    {
                        if (Master3 != null && Master3.Id != value)
                        {
                            Master3 = null;
                        }
                        _masterId3 = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _masterId3;
    
        public virtual Nullable<int> TeacherId1
        {
            get { return _teacherId1; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_teacherId1 != value)
                    {
                        if (Teacher1 != null && Teacher1.Id != value)
                        {
                            Teacher1 = null;
                        }
                        _teacherId1 = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _teacherId1;
    
        public virtual Nullable<int> TeacherId2
        {
            get { return _teacherId2; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_teacherId2 != value)
                    {
                        if (Teacher2 != null && Teacher2.Id != value)
                        {
                            Teacher2 = null;
                        }
                        _teacherId2 = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _teacherId2;
    
        public virtual Nullable<int> TeacherId3
        {
            get { return _teacherId3; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_teacherId3 != value)
                    {
                        if (Teacher3 != null && Teacher3.Id != value)
                        {
                            Teacher3 = null;
                        }
                        _teacherId3 = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _teacherId3;
    
        public virtual string QualificationSchool
        {
            get;
            set;
        }
    
        public virtual string InsuranceStatus
        {
            get;
            set;
        }
    
        public virtual string OldOaId
        {
            get;
            set;
        }
    
        public virtual string OldOaInfoSourceSubTypeName
        {
            get;
            set;
        }
    
        public virtual string OldOaClass
        {
            get;
            set;
        }
    
        public virtual string HasRelTeacher
        {
            get;
            set;
        }
    
        public virtual string RelTeacher
        {
            get;
            set;
        }
    
        public virtual string HomeIntro
        {
            get;
            set;
        }
    
        public virtual string Give1
        {
            get;
            set;
        }
    
        public virtual string Give2
        {
            get;
            set;
        }
    
        public virtual string Give3
        {
            get;
            set;
        }
    
        public virtual string Receive1
        {
            get;
            set;
        }
    
        public virtual string Receive2
        {
            get;
            set;
        }
    
        public virtual string Receive3
        {
            get;
            set;
        }
    
        public virtual string Receive4
        {
            get;
            set;
        }
    
        public virtual string Receive5
        {
            get;
            set;
        }
    
        public virtual string Receive6
        {
            get;
            set;
        }
    
        public virtual string Pic1
        {
            get;
            set;
        }
    
        public virtual string Pic2
        {
            get;
            set;
        }
    
        public virtual string Pic3
        {
            get;
            set;
        }
    
        public virtual string Pic4
        {
            get;
            set;
        }
    
        public virtual string Pic5
        {
            get;
            set;
        }
    
        public virtual string Pic6
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual District District
        {
            get { return _district; }
            set
            {
                if (!ReferenceEquals(_district, value))
                {
                    var previousValue = _district;
                    _district = value;
                    FixupDistrict(previousValue);
                }
            }
        }
        private District _district;
    
        public virtual SmallInfoSource InfoSourceSmall
        {
            get { return _infoSourceSmall; }
            set
            {
                if (!ReferenceEquals(_infoSourceSmall, value))
                {
                    var previousValue = _infoSourceSmall;
                    _infoSourceSmall = value;
                    FixupInfoSourceSmall(previousValue);
                }
            }
        }
        private SmallInfoSource _infoSourceSmall;
    
        public virtual School GruduateSchool
        {
            get { return _gruduateSchool; }
            set
            {
                if (!ReferenceEquals(_gruduateSchool, value))
                {
                    var previousValue = _gruduateSchool;
                    _gruduateSchool = value;
                    FixupGruduateSchool(previousValue);
                }
            }
        }
        private School _gruduateSchool;
    
        public virtual Clazz Clazz
        {
            get { return _clazz; }
            set
            {
                if (!ReferenceEquals(_clazz, value))
                {
                    var previousValue = _clazz;
                    _clazz = value;
                    FixupClazz(previousValue);
                }
            }
        }
        private Clazz _clazz;
    
        public virtual User Master1
        {
            get { return _master1; }
            set
            {
                if (!ReferenceEquals(_master1, value))
                {
                    var previousValue = _master1;
                    _master1 = value;
                    FixupMaster1(previousValue);
                }
            }
        }
        private User _master1;
    
        public virtual User Master2
        {
            get { return _master2; }
            set
            {
                if (!ReferenceEquals(_master2, value))
                {
                    var previousValue = _master2;
                    _master2 = value;
                    FixupMaster2(previousValue);
                }
            }
        }
        private User _master2;
    
        public virtual User Master3
        {
            get { return _master3; }
            set
            {
                if (!ReferenceEquals(_master3, value))
                {
                    var previousValue = _master3;
                    _master3 = value;
                    FixupMaster3(previousValue);
                }
            }
        }
        private User _master3;
    
        public virtual User Teacher1
        {
            get { return _teacher1; }
            set
            {
                if (!ReferenceEquals(_teacher1, value))
                {
                    var previousValue = _teacher1;
                    _teacher1 = value;
                    FixupTeacher1(previousValue);
                }
            }
        }
        private User _teacher1;
    
        public virtual User Teacher2
        {
            get { return _teacher2; }
            set
            {
                if (!ReferenceEquals(_teacher2, value))
                {
                    var previousValue = _teacher2;
                    _teacher2 = value;
                    FixupTeacher2(previousValue);
                }
            }
        }
        private User _teacher2;
    
        public virtual User Teacher3
        {
            get { return _teacher3; }
            set
            {
                if (!ReferenceEquals(_teacher3, value))
                {
                    var previousValue = _teacher3;
                    _teacher3 = value;
                    FixupTeacher3(previousValue);
                }
            }
        }
        private User _teacher3;
    
        public virtual ICollection<StudentTeleVisitRecord> TeleVisitRecords
        {
            get
            {
                if (_teleVisitRecords == null)
                {
                    var newCollection = new FixupCollection<StudentTeleVisitRecord>();
                    newCollection.CollectionChanged += FixupTeleVisitRecords;
                    _teleVisitRecords = newCollection;
                }
                return _teleVisitRecords;
            }
            set
            {
                if (!ReferenceEquals(_teleVisitRecords, value))
                {
                    var previousValue = _teleVisitRecords as FixupCollection<StudentTeleVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTeleVisitRecords;
                    }
                    _teleVisitRecords = value;
                    var newValue = value as FixupCollection<StudentTeleVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTeleVisitRecords;
                    }
                }
            }
        }
        private ICollection<StudentTeleVisitRecord> _teleVisitRecords;
    
        public virtual ICollection<StudentVisitRecord> VisitRecords
        {
            get
            {
                if (_visitRecords == null)
                {
                    var newCollection = new FixupCollection<StudentVisitRecord>();
                    newCollection.CollectionChanged += FixupVisitRecords;
                    _visitRecords = newCollection;
                }
                return _visitRecords;
            }
            set
            {
                if (!ReferenceEquals(_visitRecords, value))
                {
                    var previousValue = _visitRecords as FixupCollection<StudentVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupVisitRecords;
                    }
                    _visitRecords = value;
                    var newValue = value as FixupCollection<StudentVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupVisitRecords;
                    }
                }
            }
        }
        private ICollection<StudentVisitRecord> _visitRecords;
    
        public virtual ICollection<StudentHomeVisitRecord> HomeVisitRecords
        {
            get
            {
                if (_homeVisitRecords == null)
                {
                    var newCollection = new FixupCollection<StudentHomeVisitRecord>();
                    newCollection.CollectionChanged += FixupHomeVisitRecords;
                    _homeVisitRecords = newCollection;
                }
                return _homeVisitRecords;
            }
            set
            {
                if (!ReferenceEquals(_homeVisitRecords, value))
                {
                    var previousValue = _homeVisitRecords as FixupCollection<StudentHomeVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupHomeVisitRecords;
                    }
                    _homeVisitRecords = value;
                    var newValue = value as FixupCollection<StudentHomeVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupHomeVisitRecords;
                    }
                }
            }
        }
        private ICollection<StudentHomeVisitRecord> _homeVisitRecords;
    
        public virtual ICollection<StudentChangeClazzLog> ChangeClazzLogs
        {
            get
            {
                if (_changeClazzLogs == null)
                {
                    var newCollection = new FixupCollection<StudentChangeClazzLog>();
                    newCollection.CollectionChanged += FixupChangeClazzLogs;
                    _changeClazzLogs = newCollection;
                }
                return _changeClazzLogs;
            }
            set
            {
                if (!ReferenceEquals(_changeClazzLogs, value))
                {
                    var previousValue = _changeClazzLogs as FixupCollection<StudentChangeClazzLog>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupChangeClazzLogs;
                    }
                    _changeClazzLogs = value;
                    var newValue = value as FixupCollection<StudentChangeClazzLog>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupChangeClazzLogs;
                    }
                }
            }
        }
        private ICollection<StudentChangeClazzLog> _changeClazzLogs;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupDistrict(District previousValue)
        {
            if (previousValue != null && previousValue.Student_File.Contains(this))
            {
                previousValue.Student_File.Remove(this);
            }
    
            if (District != null)
            {
                if (!District.Student_File.Contains(this))
                {
                    District.Student_File.Add(this);
                }
                if (DistrictId != District.Id)
                {
                    DistrictId = District.Id;
                }
            }
            else if (!_settingFK)
            {
                DistrictId = null;
            }
        }
    
        private void FixupInfoSourceSmall(SmallInfoSource previousValue)
        {
            if (previousValue != null && previousValue.Students.Contains(this))
            {
                previousValue.Students.Remove(this);
            }
    
            if (InfoSourceSmall != null)
            {
                if (!InfoSourceSmall.Students.Contains(this))
                {
                    InfoSourceSmall.Students.Add(this);
                }
                if (SmallInfoSourceId != InfoSourceSmall.Id)
                {
                    SmallInfoSourceId = InfoSourceSmall.Id;
                }
            }
            else if (!_settingFK)
            {
                SmallInfoSourceId = null;
            }
        }
    
        private void FixupGruduateSchool(School previousValue)
        {
            if (previousValue != null && previousValue.Student_File.Contains(this))
            {
                previousValue.Student_File.Remove(this);
            }
    
            if (GruduateSchool != null)
            {
                if (!GruduateSchool.Student_File.Contains(this))
                {
                    GruduateSchool.Student_File.Add(this);
                }
                if (GruduateSchoolId != GruduateSchool.Id)
                {
                    GruduateSchoolId = GruduateSchool.Id;
                }
            }
            else if (!_settingFK)
            {
                GruduateSchoolId = null;
            }
        }
    
        private void FixupClazz(Clazz previousValue)
        {
            if (previousValue != null && previousValue.Student.Contains(this))
            {
                previousValue.Student.Remove(this);
            }
    
            if (Clazz != null)
            {
                if (!Clazz.Student.Contains(this))
                {
                    Clazz.Student.Add(this);
                }
                if (ClazzId != Clazz.Id)
                {
                    ClazzId = Clazz.Id;
                }
            }
            else if (!_settingFK)
            {
                ClazzId = null;
            }
        }
    
        private void FixupMaster1(User previousValue)
        {
            if (previousValue != null && previousValue.Student_File.Contains(this))
            {
                previousValue.Student_File.Remove(this);
            }
    
            if (Master1 != null)
            {
                if (!Master1.Student_File.Contains(this))
                {
                    Master1.Student_File.Add(this);
                }
                if (MasterId1 != Master1.Id)
                {
                    MasterId1 = Master1.Id;
                }
            }
            else if (!_settingFK)
            {
                MasterId1 = null;
            }
        }
    
        private void FixupMaster2(User previousValue)
        {
            if (previousValue != null && previousValue.Student_File1.Contains(this))
            {
                previousValue.Student_File1.Remove(this);
            }
    
            if (Master2 != null)
            {
                if (!Master2.Student_File1.Contains(this))
                {
                    Master2.Student_File1.Add(this);
                }
                if (MasterId2 != Master2.Id)
                {
                    MasterId2 = Master2.Id;
                }
            }
            else if (!_settingFK)
            {
                MasterId2 = null;
            }
        }
    
        private void FixupMaster3(User previousValue)
        {
            if (previousValue != null && previousValue.Student_File2.Contains(this))
            {
                previousValue.Student_File2.Remove(this);
            }
    
            if (Master3 != null)
            {
                if (!Master3.Student_File2.Contains(this))
                {
                    Master3.Student_File2.Add(this);
                }
                if (MasterId3 != Master3.Id)
                {
                    MasterId3 = Master3.Id;
                }
            }
            else if (!_settingFK)
            {
                MasterId3 = null;
            }
        }
    
        private void FixupTeacher1(User previousValue)
        {
            if (previousValue != null && previousValue.Student_File3.Contains(this))
            {
                previousValue.Student_File3.Remove(this);
            }
    
            if (Teacher1 != null)
            {
                if (!Teacher1.Student_File3.Contains(this))
                {
                    Teacher1.Student_File3.Add(this);
                }
                if (TeacherId1 != Teacher1.Id)
                {
                    TeacherId1 = Teacher1.Id;
                }
            }
            else if (!_settingFK)
            {
                TeacherId1 = null;
            }
        }
    
        private void FixupTeacher2(User previousValue)
        {
            if (previousValue != null && previousValue.Student_File4.Contains(this))
            {
                previousValue.Student_File4.Remove(this);
            }
    
            if (Teacher2 != null)
            {
                if (!Teacher2.Student_File4.Contains(this))
                {
                    Teacher2.Student_File4.Add(this);
                }
                if (TeacherId2 != Teacher2.Id)
                {
                    TeacherId2 = Teacher2.Id;
                }
            }
            else if (!_settingFK)
            {
                TeacherId2 = null;
            }
        }
    
        private void FixupTeacher3(User previousValue)
        {
            if (previousValue != null && previousValue.Student_File5.Contains(this))
            {
                previousValue.Student_File5.Remove(this);
            }
    
            if (Teacher3 != null)
            {
                if (!Teacher3.Student_File5.Contains(this))
                {
                    Teacher3.Student_File5.Add(this);
                }
                if (TeacherId3 != Teacher3.Id)
                {
                    TeacherId3 = Teacher3.Id;
                }
            }
            else if (!_settingFK)
            {
                TeacherId3 = null;
            }
        }
    
        private void FixupTeleVisitRecords(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentTeleVisitRecord item in e.NewItems)
                {
                    item.Student = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentTeleVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Student, this))
                    {
                        item.Student = null;
                    }
                }
            }
        }
    
        private void FixupVisitRecords(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentVisitRecord item in e.NewItems)
                {
                    item.Student = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Student, this))
                    {
                        item.Student = null;
                    }
                }
            }
        }
    
        private void FixupHomeVisitRecords(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentHomeVisitRecord item in e.NewItems)
                {
                    item.Student = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentHomeVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Student, this))
                    {
                        item.Student = null;
                    }
                }
            }
        }
    
        private void FixupChangeClazzLogs(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentChangeClazzLog item in e.NewItems)
                {
                    item.Student = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentChangeClazzLog item in e.OldItems)
                {
                    if (ReferenceEquals(item.Student, this))
                    {
                        item.Student = null;
                    }
                }
            }
        }

        #endregion

    }
}
