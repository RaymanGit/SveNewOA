//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Cn.Com.Sve.OA.Entities
{
    public partial class UserGroupFunctionPermission
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int UserGroupId
        {
            get { return _userGroupId; }
            set
            {
                if (_userGroupId != value)
                {
                    if (UserGroup != null && UserGroup.Id != value)
                    {
                        UserGroup = null;
                    }
                    _userGroupId = value;
                }
            }
        }
        private int _userGroupId;
    
        public virtual int FunctionId
        {
            get { return _functionId; }
            set
            {
                if (_functionId != value)
                {
                    if (Function != null && Function.Id != value)
                    {
                        Function = null;
                    }
                    _functionId = value;
                }
            }
        }
        private int _functionId;

        #endregion

        #region Navigation Properties
    
        public virtual Function Function
        {
            get { return _function; }
            set
            {
                if (!ReferenceEquals(_function, value))
                {
                    var previousValue = _function;
                    _function = value;
                    FixupFunction(previousValue);
                }
            }
        }
        private Function _function;
    
        public virtual UserGroup UserGroup
        {
            get { return _userGroup; }
            set
            {
                if (!ReferenceEquals(_userGroup, value))
                {
                    var previousValue = _userGroup;
                    _userGroup = value;
                    FixupUserGroup(previousValue);
                }
            }
        }
        private UserGroup _userGroup;

        #endregion

        #region Association Fixup
    
        private void FixupFunction(Function previousValue)
        {
            if (previousValue != null && previousValue.UserGroupFunctionPermissions.Contains(this))
            {
                previousValue.UserGroupFunctionPermissions.Remove(this);
            }
    
            if (Function != null)
            {
                if (!Function.UserGroupFunctionPermissions.Contains(this))
                {
                    Function.UserGroupFunctionPermissions.Add(this);
                }
                if (FunctionId != Function.Id)
                {
                    FunctionId = Function.Id;
                }
            }
        }
    
        private void FixupUserGroup(UserGroup previousValue)
        {
            if (previousValue != null && previousValue.FunctionPermissions.Contains(this))
            {
                previousValue.FunctionPermissions.Remove(this);
            }
    
            if (UserGroup != null)
            {
                if (!UserGroup.FunctionPermissions.Contains(this))
                {
                    UserGroup.FunctionPermissions.Add(this);
                }
                if (UserGroupId != UserGroup.Id)
                {
                    UserGroupId = UserGroup.Id;
                }
            }
        }

        #endregion

    }
}
