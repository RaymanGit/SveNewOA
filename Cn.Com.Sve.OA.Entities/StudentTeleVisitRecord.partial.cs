//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Cn.Com.Sve.OA.Entities
{
    public partial class StudentTeleVisitRecord
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int ClazzId
        {
            get { return _clazzId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_clazzId != value)
                    {
                        if (Clazz != null && Clazz.Id != value)
                        {
                            Clazz = null;
                        }
                        _clazzId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _clazzId;
    
        public virtual int StudentId
        {
            get { return _studentId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_studentId != value)
                    {
                        if (Student != null && Student.Id != value)
                        {
                            Student = null;
                        }
                        _studentId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _studentId;
    
        public virtual System.DateTime Time
        {
            get;
            set;
        }
    
        public virtual int VisitorId
        {
            get { return _visitorId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_visitorId != value)
                    {
                        if (Visitor != null && Visitor.Id != value)
                        {
                            Visitor = null;
                        }
                        _visitorId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _visitorId;
    
        public virtual string Interviewee
        {
            get;
            set;
        }
    
        public virtual string PhoneNo
        {
            get;
            set;
        }
    
        public virtual string Advice
        {
            get;
            set;
        }
    
        public virtual string Summary
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ReviewerId
        {
            get { return _reviewerId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_reviewerId != value)
                    {
                        if (Reviewer != null && Reviewer.Id != value)
                        {
                            Reviewer = null;
                        }
                        _reviewerId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _reviewerId;
    
        public virtual Nullable<System.DateTime> ReviewTime
        {
            get;
            set;
        }
    
        public virtual string ReviewComment
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Clazz Clazz
        {
            get { return _clazz; }
            set
            {
                if (!ReferenceEquals(_clazz, value))
                {
                    var previousValue = _clazz;
                    _clazz = value;
                    FixupClazz(previousValue);
                }
            }
        }
        private Clazz _clazz;
    
        public virtual Student Student
        {
            get { return _student; }
            set
            {
                if (!ReferenceEquals(_student, value))
                {
                    var previousValue = _student;
                    _student = value;
                    FixupStudent(previousValue);
                }
            }
        }
        private Student _student;
    
        public virtual User Reviewer
        {
            get { return _reviewer; }
            set
            {
                if (!ReferenceEquals(_reviewer, value))
                {
                    var previousValue = _reviewer;
                    _reviewer = value;
                    FixupReviewer(previousValue);
                }
            }
        }
        private User _reviewer;
    
        public virtual User Visitor
        {
            get { return _visitor; }
            set
            {
                if (!ReferenceEquals(_visitor, value))
                {
                    var previousValue = _visitor;
                    _visitor = value;
                    FixupVisitor(previousValue);
                }
            }
        }
        private User _visitor;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupClazz(Clazz previousValue)
        {
            if (previousValue != null && previousValue.Student_TeleVisitRecord.Contains(this))
            {
                previousValue.Student_TeleVisitRecord.Remove(this);
            }
    
            if (Clazz != null)
            {
                if (!Clazz.Student_TeleVisitRecord.Contains(this))
                {
                    Clazz.Student_TeleVisitRecord.Add(this);
                }
                if (ClazzId != Clazz.Id)
                {
                    ClazzId = Clazz.Id;
                }
            }
        }
    
        private void FixupStudent(Student previousValue)
        {
            if (previousValue != null && previousValue.TeleVisitRecords.Contains(this))
            {
                previousValue.TeleVisitRecords.Remove(this);
            }
    
            if (Student != null)
            {
                if (!Student.TeleVisitRecords.Contains(this))
                {
                    Student.TeleVisitRecords.Add(this);
                }
                if (StudentId != Student.Id)
                {
                    StudentId = Student.Id;
                }
            }
        }
    
        private void FixupReviewer(User previousValue)
        {
            if (previousValue != null && previousValue.Student_TeleVisitRecord.Contains(this))
            {
                previousValue.Student_TeleVisitRecord.Remove(this);
            }
    
            if (Reviewer != null)
            {
                if (!Reviewer.Student_TeleVisitRecord.Contains(this))
                {
                    Reviewer.Student_TeleVisitRecord.Add(this);
                }
                if (ReviewerId != Reviewer.Id)
                {
                    ReviewerId = Reviewer.Id;
                }
            }
            else if (!_settingFK)
            {
                ReviewerId = null;
            }
        }
    
        private void FixupVisitor(User previousValue)
        {
            if (previousValue != null && previousValue.Student_TeleVisitRecord1.Contains(this))
            {
                previousValue.Student_TeleVisitRecord1.Remove(this);
            }
    
            if (Visitor != null)
            {
                if (!Visitor.Student_TeleVisitRecord1.Contains(this))
                {
                    Visitor.Student_TeleVisitRecord1.Add(this);
                }
                if (VisitorId != Visitor.Id)
                {
                    VisitorId = Visitor.Id;
                }
            }
        }

        #endregion

    }
}
