//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Cn.Com.Sve.OA.Entities
{
    public partial class School
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DistrictId
        {
            get { return _districtId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_districtId != value)
                    {
                        if (District != null && District.Id != value)
                        {
                            District = null;
                        }
                        _districtId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _districtId;
    
        public virtual bool IsSold
        {
            get;
            set;
        }
    
        public virtual string Type
        {
            get;
            set;
        }
    
        public virtual string Levels
        {
            get;
            set;
        }
    
        public virtual string DevBy
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> DevDate
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> Important
        {
            get;
            set;
        }
    
        public virtual string Equipments
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DaoJiShiPai
        {
            get;
            set;
        }
    
        public virtual Nullable<int> JiaoShiBiaoYu
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ShuShiBiaoYu
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ShiTangBiaoYu
        {
            get;
            set;
        }
    
        public virtual Nullable<int> LouTiBiaoYu
        {
            get;
            set;
        }
    
        public virtual Nullable<int> BuTiao
        {
            get;
            set;
        }
    
        public virtual string Address
        {
            get;
            set;
        }
    
        public virtual Nullable<int> HighClassQty
        {
            get;
            set;
        }
    
        public virtual Nullable<int> HighStudentQty
        {
            get;
            set;
        }
    
        public virtual Nullable<int> LowClassQty
        {
            get;
            set;
        }
    
        public virtual Nullable<int> LowStudentQty
        {
            get;
            set;
        }
    
        public virtual string Remark
        {
            get;
            set;
        }
    
        public virtual string OldOaHuWaiId
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual District District
        {
            get { return _district; }
            set
            {
                if (!ReferenceEquals(_district, value))
                {
                    var previousValue = _district;
                    _district = value;
                    FixupDistrict(previousValue);
                }
            }
        }
        private District _district;
    
        public virtual ICollection<Customer> Customers
        {
            get
            {
                if (_customers == null)
                {
                    var newCollection = new FixupCollection<Customer>();
                    newCollection.CollectionChanged += FixupCustomers;
                    _customers = newCollection;
                }
                return _customers;
            }
            set
            {
                if (!ReferenceEquals(_customers, value))
                {
                    var previousValue = _customers as FixupCollection<Customer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCustomers;
                    }
                    _customers = value;
                    var newValue = value as FixupCollection<Customer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCustomers;
                    }
                }
            }
        }
        private ICollection<Customer> _customers;
    
        public virtual ICollection<Student> Student_File
        {
            get
            {
                if (_student_File == null)
                {
                    var newCollection = new FixupCollection<Student>();
                    newCollection.CollectionChanged += FixupStudent_File;
                    _student_File = newCollection;
                }
                return _student_File;
            }
            set
            {
                if (!ReferenceEquals(_student_File, value))
                {
                    var previousValue = _student_File as FixupCollection<Student>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_File;
                    }
                    _student_File = value;
                    var newValue = value as FixupCollection<Student>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_File;
                    }
                }
            }
        }
        private ICollection<Student> _student_File;
    
        public virtual ICollection<SchoolAd> SchoolAds
        {
            get
            {
                if (_schoolAds == null)
                {
                    var newCollection = new FixupCollection<SchoolAd>();
                    newCollection.CollectionChanged += FixupSchoolAds;
                    _schoolAds = newCollection;
                }
                return _schoolAds;
            }
            set
            {
                if (!ReferenceEquals(_schoolAds, value))
                {
                    var previousValue = _schoolAds as FixupCollection<SchoolAd>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSchoolAds;
                    }
                    _schoolAds = value;
                    var newValue = value as FixupCollection<SchoolAd>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSchoolAds;
                    }
                }
            }
        }
        private ICollection<SchoolAd> _schoolAds;
    
        public virtual ICollection<SchoolContact> SchoolContacts
        {
            get
            {
                if (_schoolContacts == null)
                {
                    var newCollection = new FixupCollection<SchoolContact>();
                    newCollection.CollectionChanged += FixupSchoolContacts;
                    _schoolContacts = newCollection;
                }
                return _schoolContacts;
            }
            set
            {
                if (!ReferenceEquals(_schoolContacts, value))
                {
                    var previousValue = _schoolContacts as FixupCollection<SchoolContact>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSchoolContacts;
                    }
                    _schoolContacts = value;
                    var newValue = value as FixupCollection<SchoolContact>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSchoolContacts;
                    }
                }
            }
        }
        private ICollection<SchoolContact> _schoolContacts;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupDistrict(District previousValue)
        {
            if (previousValue != null && previousValue.Schools.Contains(this))
            {
                previousValue.Schools.Remove(this);
            }
    
            if (District != null)
            {
                if (!District.Schools.Contains(this))
                {
                    District.Schools.Add(this);
                }
                if (DistrictId != District.Id)
                {
                    DistrictId = District.Id;
                }
            }
            else if (!_settingFK)
            {
                DistrictId = null;
            }
        }
    
        private void FixupCustomers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Customer item in e.NewItems)
                {
                    item.School = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Customer item in e.OldItems)
                {
                    if (ReferenceEquals(item.School, this))
                    {
                        item.School = null;
                    }
                }
            }
        }
    
        private void FixupStudent_File(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Student item in e.NewItems)
                {
                    item.GruduateSchool = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Student item in e.OldItems)
                {
                    if (ReferenceEquals(item.GruduateSchool, this))
                    {
                        item.GruduateSchool = null;
                    }
                }
            }
        }
    
        private void FixupSchoolAds(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SchoolAd item in e.NewItems)
                {
                    item.School = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SchoolAd item in e.OldItems)
                {
                    if (ReferenceEquals(item.School, this))
                    {
                        item.School = null;
                    }
                }
            }
        }
    
        private void FixupSchoolContacts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SchoolContact item in e.NewItems)
                {
                    item.School = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SchoolContact item in e.OldItems)
                {
                    if (ReferenceEquals(item.School, this))
                    {
                        item.School = null;
                    }
                }
            }
        }

        #endregion

    }
}
