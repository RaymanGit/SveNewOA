//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Cn.Com.Sve.OA.Entities
{
    public partial class User
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Password
        {
            get;
            set;
        }
    
        public virtual string Status
        {
            get;
            set;
        }
    
        public virtual Nullable<System.DateTime> LastLoginTime
        {
            get;
            set;
        }
    
        public virtual string LastLoginIP
        {
            get;
            set;
        }
    
        public virtual string DefaultUrl
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<SalesTeamMember> SalesTeamMembers
        {
            get
            {
                if (_salesTeamMembers == null)
                {
                    var newCollection = new FixupCollection<SalesTeamMember>();
                    newCollection.CollectionChanged += FixupSalesTeamMembers;
                    _salesTeamMembers = newCollection;
                }
                return _salesTeamMembers;
            }
            set
            {
                if (!ReferenceEquals(_salesTeamMembers, value))
                {
                    var previousValue = _salesTeamMembers as FixupCollection<SalesTeamMember>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSalesTeamMembers;
                    }
                    _salesTeamMembers = value;
                    var newValue = value as FixupCollection<SalesTeamMember>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSalesTeamMembers;
                    }
                }
            }
        }
        private ICollection<SalesTeamMember> _salesTeamMembers;
    
        public virtual ICollection<Customer> Marketing_Customer
        {
            get
            {
                if (_marketing_Customer == null)
                {
                    var newCollection = new FixupCollection<Customer>();
                    newCollection.CollectionChanged += FixupMarketing_Customer;
                    _marketing_Customer = newCollection;
                }
                return _marketing_Customer;
            }
            set
            {
                if (!ReferenceEquals(_marketing_Customer, value))
                {
                    var previousValue = _marketing_Customer as FixupCollection<Customer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMarketing_Customer;
                    }
                    _marketing_Customer = value;
                    var newValue = value as FixupCollection<Customer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMarketing_Customer;
                    }
                }
            }
        }
        private ICollection<Customer> _marketing_Customer;
    
        public virtual ICollection<Customer> Marketing_Customer1
        {
            get
            {
                if (_marketing_Customer1 == null)
                {
                    var newCollection = new FixupCollection<Customer>();
                    newCollection.CollectionChanged += FixupMarketing_Customer1;
                    _marketing_Customer1 = newCollection;
                }
                return _marketing_Customer1;
            }
            set
            {
                if (!ReferenceEquals(_marketing_Customer1, value))
                {
                    var previousValue = _marketing_Customer1 as FixupCollection<Customer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMarketing_Customer1;
                    }
                    _marketing_Customer1 = value;
                    var newValue = value as FixupCollection<Customer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMarketing_Customer1;
                    }
                }
            }
        }
        private ICollection<Customer> _marketing_Customer1;
    
        public virtual ICollection<Customer> Marketing_Customer2
        {
            get
            {
                if (_marketing_Customer2 == null)
                {
                    var newCollection = new FixupCollection<Customer>();
                    newCollection.CollectionChanged += FixupMarketing_Customer2;
                    _marketing_Customer2 = newCollection;
                }
                return _marketing_Customer2;
            }
            set
            {
                if (!ReferenceEquals(_marketing_Customer2, value))
                {
                    var previousValue = _marketing_Customer2 as FixupCollection<Customer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMarketing_Customer2;
                    }
                    _marketing_Customer2 = value;
                    var newValue = value as FixupCollection<Customer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMarketing_Customer2;
                    }
                }
            }
        }
        private ICollection<Customer> _marketing_Customer2;
    
        public virtual ICollection<Customer> Marketing_Customer3
        {
            get
            {
                if (_marketing_Customer3 == null)
                {
                    var newCollection = new FixupCollection<Customer>();
                    newCollection.CollectionChanged += FixupMarketing_Customer3;
                    _marketing_Customer3 = newCollection;
                }
                return _marketing_Customer3;
            }
            set
            {
                if (!ReferenceEquals(_marketing_Customer3, value))
                {
                    var previousValue = _marketing_Customer3 as FixupCollection<Customer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMarketing_Customer3;
                    }
                    _marketing_Customer3 = value;
                    var newValue = value as FixupCollection<Customer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMarketing_Customer3;
                    }
                }
            }
        }
        private ICollection<Customer> _marketing_Customer3;
    
        public virtual ICollection<Customer> Marketing_Customer4
        {
            get
            {
                if (_marketing_Customer4 == null)
                {
                    var newCollection = new FixupCollection<Customer>();
                    newCollection.CollectionChanged += FixupMarketing_Customer4;
                    _marketing_Customer4 = newCollection;
                }
                return _marketing_Customer4;
            }
            set
            {
                if (!ReferenceEquals(_marketing_Customer4, value))
                {
                    var previousValue = _marketing_Customer4 as FixupCollection<Customer>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMarketing_Customer4;
                    }
                    _marketing_Customer4 = value;
                    var newValue = value as FixupCollection<Customer>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMarketing_Customer4;
                    }
                }
            }
        }
        private ICollection<Customer> _marketing_Customer4;
    
        public virtual ICollection<TelSaleLog> Marketing_TelSaleLog
        {
            get
            {
                if (_marketing_TelSaleLog == null)
                {
                    var newCollection = new FixupCollection<TelSaleLog>();
                    newCollection.CollectionChanged += FixupMarketing_TelSaleLog;
                    _marketing_TelSaleLog = newCollection;
                }
                return _marketing_TelSaleLog;
            }
            set
            {
                if (!ReferenceEquals(_marketing_TelSaleLog, value))
                {
                    var previousValue = _marketing_TelSaleLog as FixupCollection<TelSaleLog>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupMarketing_TelSaleLog;
                    }
                    _marketing_TelSaleLog = value;
                    var newValue = value as FixupCollection<TelSaleLog>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupMarketing_TelSaleLog;
                    }
                }
            }
        }
        private ICollection<TelSaleLog> _marketing_TelSaleLog;
    
        public virtual ICollection<Supervisor> Supervisors
        {
            get
            {
                if (_supervisors == null)
                {
                    var newCollection = new FixupCollection<Supervisor>();
                    newCollection.CollectionChanged += FixupSupervisors;
                    _supervisors = newCollection;
                }
                return _supervisors;
            }
            set
            {
                if (!ReferenceEquals(_supervisors, value))
                {
                    var previousValue = _supervisors as FixupCollection<Supervisor>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupSupervisors;
                    }
                    _supervisors = value;
                    var newValue = value as FixupCollection<Supervisor>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupSupervisors;
                    }
                }
            }
        }
        private ICollection<Supervisor> _supervisors;
    
        public virtual ICollection<UserInGroup> UserGroups
        {
            get
            {
                if (_userGroups == null)
                {
                    var newCollection = new FixupCollection<UserInGroup>();
                    newCollection.CollectionChanged += FixupUserGroups;
                    _userGroups = newCollection;
                }
                return _userGroups;
            }
            set
            {
                if (!ReferenceEquals(_userGroups, value))
                {
                    var previousValue = _userGroups as FixupCollection<UserInGroup>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserGroups;
                    }
                    _userGroups = value;
                    var newValue = value as FixupCollection<UserInGroup>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserGroups;
                    }
                }
            }
        }
        private ICollection<UserInGroup> _userGroups;
    
        public virtual ICollection<Student> Student_File
        {
            get
            {
                if (_student_File == null)
                {
                    var newCollection = new FixupCollection<Student>();
                    newCollection.CollectionChanged += FixupStudent_File;
                    _student_File = newCollection;
                }
                return _student_File;
            }
            set
            {
                if (!ReferenceEquals(_student_File, value))
                {
                    var previousValue = _student_File as FixupCollection<Student>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_File;
                    }
                    _student_File = value;
                    var newValue = value as FixupCollection<Student>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_File;
                    }
                }
            }
        }
        private ICollection<Student> _student_File;
    
        public virtual ICollection<Student> Student_File1
        {
            get
            {
                if (_student_File1 == null)
                {
                    var newCollection = new FixupCollection<Student>();
                    newCollection.CollectionChanged += FixupStudent_File1;
                    _student_File1 = newCollection;
                }
                return _student_File1;
            }
            set
            {
                if (!ReferenceEquals(_student_File1, value))
                {
                    var previousValue = _student_File1 as FixupCollection<Student>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_File1;
                    }
                    _student_File1 = value;
                    var newValue = value as FixupCollection<Student>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_File1;
                    }
                }
            }
        }
        private ICollection<Student> _student_File1;
    
        public virtual ICollection<Student> Student_File2
        {
            get
            {
                if (_student_File2 == null)
                {
                    var newCollection = new FixupCollection<Student>();
                    newCollection.CollectionChanged += FixupStudent_File2;
                    _student_File2 = newCollection;
                }
                return _student_File2;
            }
            set
            {
                if (!ReferenceEquals(_student_File2, value))
                {
                    var previousValue = _student_File2 as FixupCollection<Student>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_File2;
                    }
                    _student_File2 = value;
                    var newValue = value as FixupCollection<Student>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_File2;
                    }
                }
            }
        }
        private ICollection<Student> _student_File2;
    
        public virtual ICollection<Student> Student_File3
        {
            get
            {
                if (_student_File3 == null)
                {
                    var newCollection = new FixupCollection<Student>();
                    newCollection.CollectionChanged += FixupStudent_File3;
                    _student_File3 = newCollection;
                }
                return _student_File3;
            }
            set
            {
                if (!ReferenceEquals(_student_File3, value))
                {
                    var previousValue = _student_File3 as FixupCollection<Student>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_File3;
                    }
                    _student_File3 = value;
                    var newValue = value as FixupCollection<Student>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_File3;
                    }
                }
            }
        }
        private ICollection<Student> _student_File3;
    
        public virtual ICollection<Student> Student_File4
        {
            get
            {
                if (_student_File4 == null)
                {
                    var newCollection = new FixupCollection<Student>();
                    newCollection.CollectionChanged += FixupStudent_File4;
                    _student_File4 = newCollection;
                }
                return _student_File4;
            }
            set
            {
                if (!ReferenceEquals(_student_File4, value))
                {
                    var previousValue = _student_File4 as FixupCollection<Student>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_File4;
                    }
                    _student_File4 = value;
                    var newValue = value as FixupCollection<Student>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_File4;
                    }
                }
            }
        }
        private ICollection<Student> _student_File4;
    
        public virtual ICollection<Student> Student_File5
        {
            get
            {
                if (_student_File5 == null)
                {
                    var newCollection = new FixupCollection<Student>();
                    newCollection.CollectionChanged += FixupStudent_File5;
                    _student_File5 = newCollection;
                }
                return _student_File5;
            }
            set
            {
                if (!ReferenceEquals(_student_File5, value))
                {
                    var previousValue = _student_File5 as FixupCollection<Student>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_File5;
                    }
                    _student_File5 = value;
                    var newValue = value as FixupCollection<Student>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_File5;
                    }
                }
            }
        }
        private ICollection<Student> _student_File5;
    
        public virtual ICollection<StudentTeleVisitRecord> Student_TeleVisitRecord
        {
            get
            {
                if (_student_TeleVisitRecord == null)
                {
                    var newCollection = new FixupCollection<StudentTeleVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_TeleVisitRecord;
                    _student_TeleVisitRecord = newCollection;
                }
                return _student_TeleVisitRecord;
            }
            set
            {
                if (!ReferenceEquals(_student_TeleVisitRecord, value))
                {
                    var previousValue = _student_TeleVisitRecord as FixupCollection<StudentTeleVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_TeleVisitRecord;
                    }
                    _student_TeleVisitRecord = value;
                    var newValue = value as FixupCollection<StudentTeleVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_TeleVisitRecord;
                    }
                }
            }
        }
        private ICollection<StudentTeleVisitRecord> _student_TeleVisitRecord;
    
        public virtual ICollection<StudentTeleVisitRecord> Student_TeleVisitRecord1
        {
            get
            {
                if (_student_TeleVisitRecord1 == null)
                {
                    var newCollection = new FixupCollection<StudentTeleVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_TeleVisitRecord1;
                    _student_TeleVisitRecord1 = newCollection;
                }
                return _student_TeleVisitRecord1;
            }
            set
            {
                if (!ReferenceEquals(_student_TeleVisitRecord1, value))
                {
                    var previousValue = _student_TeleVisitRecord1 as FixupCollection<StudentTeleVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_TeleVisitRecord1;
                    }
                    _student_TeleVisitRecord1 = value;
                    var newValue = value as FixupCollection<StudentTeleVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_TeleVisitRecord1;
                    }
                }
            }
        }
        private ICollection<StudentTeleVisitRecord> _student_TeleVisitRecord1;
    
        public virtual ICollection<StudentVisitRecord> Student_VisitRecord
        {
            get
            {
                if (_student_VisitRecord == null)
                {
                    var newCollection = new FixupCollection<StudentVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_VisitRecord;
                    _student_VisitRecord = newCollection;
                }
                return _student_VisitRecord;
            }
            set
            {
                if (!ReferenceEquals(_student_VisitRecord, value))
                {
                    var previousValue = _student_VisitRecord as FixupCollection<StudentVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_VisitRecord;
                    }
                    _student_VisitRecord = value;
                    var newValue = value as FixupCollection<StudentVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_VisitRecord;
                    }
                }
            }
        }
        private ICollection<StudentVisitRecord> _student_VisitRecord;
    
        public virtual ICollection<StudentVisitRecord> Student_VisitRecord1
        {
            get
            {
                if (_student_VisitRecord1 == null)
                {
                    var newCollection = new FixupCollection<StudentVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_VisitRecord1;
                    _student_VisitRecord1 = newCollection;
                }
                return _student_VisitRecord1;
            }
            set
            {
                if (!ReferenceEquals(_student_VisitRecord1, value))
                {
                    var previousValue = _student_VisitRecord1 as FixupCollection<StudentVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_VisitRecord1;
                    }
                    _student_VisitRecord1 = value;
                    var newValue = value as FixupCollection<StudentVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_VisitRecord1;
                    }
                }
            }
        }
        private ICollection<StudentVisitRecord> _student_VisitRecord1;
    
        public virtual ICollection<StudentHomeVisitRecord> Student_HomeVisitRecord
        {
            get
            {
                if (_student_HomeVisitRecord == null)
                {
                    var newCollection = new FixupCollection<StudentHomeVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_HomeVisitRecord;
                    _student_HomeVisitRecord = newCollection;
                }
                return _student_HomeVisitRecord;
            }
            set
            {
                if (!ReferenceEquals(_student_HomeVisitRecord, value))
                {
                    var previousValue = _student_HomeVisitRecord as FixupCollection<StudentHomeVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_HomeVisitRecord;
                    }
                    _student_HomeVisitRecord = value;
                    var newValue = value as FixupCollection<StudentHomeVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_HomeVisitRecord;
                    }
                }
            }
        }
        private ICollection<StudentHomeVisitRecord> _student_HomeVisitRecord;
    
        public virtual ICollection<StudentHomeVisitRecord> Student_HomeVisitRecord_1
        {
            get
            {
                if (_student_HomeVisitRecord_1 == null)
                {
                    var newCollection = new FixupCollection<StudentHomeVisitRecord>();
                    newCollection.CollectionChanged += FixupStudent_HomeVisitRecord_1;
                    _student_HomeVisitRecord_1 = newCollection;
                }
                return _student_HomeVisitRecord_1;
            }
            set
            {
                if (!ReferenceEquals(_student_HomeVisitRecord_1, value))
                {
                    var previousValue = _student_HomeVisitRecord_1 as FixupCollection<StudentHomeVisitRecord>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupStudent_HomeVisitRecord_1;
                    }
                    _student_HomeVisitRecord_1 = value;
                    var newValue = value as FixupCollection<StudentHomeVisitRecord>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupStudent_HomeVisitRecord_1;
                    }
                }
            }
        }
        private ICollection<StudentHomeVisitRecord> _student_HomeVisitRecord_1;
    
        public virtual ICollection<EmploymentCompany> Employment_Company
        {
            get
            {
                if (_employment_Company == null)
                {
                    var newCollection = new FixupCollection<EmploymentCompany>();
                    newCollection.CollectionChanged += FixupEmployment_Company;
                    _employment_Company = newCollection;
                }
                return _employment_Company;
            }
            set
            {
                if (!ReferenceEquals(_employment_Company, value))
                {
                    var previousValue = _employment_Company as FixupCollection<EmploymentCompany>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEmployment_Company;
                    }
                    _employment_Company = value;
                    var newValue = value as FixupCollection<EmploymentCompany>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEmployment_Company;
                    }
                }
            }
        }
        private ICollection<EmploymentCompany> _employment_Company;
    
        public virtual ICollection<EmploymentCompanyContactVisitLog> Employment_CompanyContact_VisitLog
        {
            get
            {
                if (_employment_CompanyContact_VisitLog == null)
                {
                    var newCollection = new FixupCollection<EmploymentCompanyContactVisitLog>();
                    newCollection.CollectionChanged += FixupEmployment_CompanyContact_VisitLog;
                    _employment_CompanyContact_VisitLog = newCollection;
                }
                return _employment_CompanyContact_VisitLog;
            }
            set
            {
                if (!ReferenceEquals(_employment_CompanyContact_VisitLog, value))
                {
                    var previousValue = _employment_CompanyContact_VisitLog as FixupCollection<EmploymentCompanyContactVisitLog>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEmployment_CompanyContact_VisitLog;
                    }
                    _employment_CompanyContact_VisitLog = value;
                    var newValue = value as FixupCollection<EmploymentCompanyContactVisitLog>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEmployment_CompanyContact_VisitLog;
                    }
                }
            }
        }
        private ICollection<EmploymentCompanyContactVisitLog> _employment_CompanyContact_VisitLog;

        #endregion

        #region Association Fixup
    
        private void FixupSalesTeamMembers(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (SalesTeamMember item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SalesTeamMember item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupMarketing_Customer(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Customer item in e.NewItems)
                {
                    item.Consultant1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Customer item in e.OldItems)
                {
                    if (ReferenceEquals(item.Consultant1, this))
                    {
                        item.Consultant1 = null;
                    }
                }
            }
        }
    
        private void FixupMarketing_Customer1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Customer item in e.NewItems)
                {
                    item.Consultant2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Customer item in e.OldItems)
                {
                    if (ReferenceEquals(item.Consultant2, this))
                    {
                        item.Consultant2 = null;
                    }
                }
            }
        }
    
        private void FixupMarketing_Customer2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Customer item in e.NewItems)
                {
                    item.CreateTeacher = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Customer item in e.OldItems)
                {
                    if (ReferenceEquals(item.CreateTeacher, this))
                    {
                        item.CreateTeacher = null;
                    }
                }
            }
        }
    
        private void FixupMarketing_Customer3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Customer item in e.NewItems)
                {
                    item.NetConsultant = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Customer item in e.OldItems)
                {
                    if (ReferenceEquals(item.NetConsultant, this))
                    {
                        item.NetConsultant = null;
                    }
                }
            }
        }
    
        private void FixupMarketing_Customer4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Customer item in e.NewItems)
                {
                    item.Salesman = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Customer item in e.OldItems)
                {
                    if (ReferenceEquals(item.Salesman, this))
                    {
                        item.Salesman = null;
                    }
                }
            }
        }
    
        private void FixupMarketing_TelSaleLog(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TelSaleLog item in e.NewItems)
                {
                    item.Salesman = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TelSaleLog item in e.OldItems)
                {
                    if (ReferenceEquals(item.Salesman, this))
                    {
                        item.Salesman = null;
                    }
                }
            }
        }
    
        private void FixupSupervisors(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Supervisor item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Supervisor item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupUserGroups(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserInGroup item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserInGroup item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupStudent_File(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Student item in e.NewItems)
                {
                    item.Master1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Student item in e.OldItems)
                {
                    if (ReferenceEquals(item.Master1, this))
                    {
                        item.Master1 = null;
                    }
                }
            }
        }
    
        private void FixupStudent_File1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Student item in e.NewItems)
                {
                    item.Master2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Student item in e.OldItems)
                {
                    if (ReferenceEquals(item.Master2, this))
                    {
                        item.Master2 = null;
                    }
                }
            }
        }
    
        private void FixupStudent_File2(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Student item in e.NewItems)
                {
                    item.Master3 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Student item in e.OldItems)
                {
                    if (ReferenceEquals(item.Master3, this))
                    {
                        item.Master3 = null;
                    }
                }
            }
        }
    
        private void FixupStudent_File3(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Student item in e.NewItems)
                {
                    item.Teacher1 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Student item in e.OldItems)
                {
                    if (ReferenceEquals(item.Teacher1, this))
                    {
                        item.Teacher1 = null;
                    }
                }
            }
        }
    
        private void FixupStudent_File4(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Student item in e.NewItems)
                {
                    item.Teacher2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Student item in e.OldItems)
                {
                    if (ReferenceEquals(item.Teacher2, this))
                    {
                        item.Teacher2 = null;
                    }
                }
            }
        }
    
        private void FixupStudent_File5(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Student item in e.NewItems)
                {
                    item.Teacher3 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Student item in e.OldItems)
                {
                    if (ReferenceEquals(item.Teacher3, this))
                    {
                        item.Teacher3 = null;
                    }
                }
            }
        }
    
        private void FixupStudent_TeleVisitRecord(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentTeleVisitRecord item in e.NewItems)
                {
                    item.Reviewer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentTeleVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Reviewer, this))
                    {
                        item.Reviewer = null;
                    }
                }
            }
        }
    
        private void FixupStudent_TeleVisitRecord1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentTeleVisitRecord item in e.NewItems)
                {
                    item.Visitor = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentTeleVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Visitor, this))
                    {
                        item.Visitor = null;
                    }
                }
            }
        }
    
        private void FixupStudent_VisitRecord(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentVisitRecord item in e.NewItems)
                {
                    item.Reviewer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Reviewer, this))
                    {
                        item.Reviewer = null;
                    }
                }
            }
        }
    
        private void FixupStudent_VisitRecord1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentVisitRecord item in e.NewItems)
                {
                    item.Visitor = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Visitor, this))
                    {
                        item.Visitor = null;
                    }
                }
            }
        }
    
        private void FixupStudent_HomeVisitRecord(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentHomeVisitRecord item in e.NewItems)
                {
                    item.Reviewer = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentHomeVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.Reviewer, this))
                    {
                        item.Reviewer = null;
                    }
                }
            }
        }
    
        private void FixupStudent_HomeVisitRecord_1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (StudentHomeVisitRecord item in e.NewItems)
                {
                    item.InputUser = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (StudentHomeVisitRecord item in e.OldItems)
                {
                    if (ReferenceEquals(item.InputUser, this))
                    {
                        item.InputUser = null;
                    }
                }
            }
        }
    
        private void FixupEmployment_Company(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EmploymentCompany item in e.NewItems)
                {
                    item.User = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EmploymentCompany item in e.OldItems)
                {
                    if (ReferenceEquals(item.User, this))
                    {
                        item.User = null;
                    }
                }
            }
        }
    
        private void FixupEmployment_CompanyContact_VisitLog(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (EmploymentCompanyContactVisitLog item in e.NewItems)
                {
                    item.Visitor = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (EmploymentCompanyContactVisitLog item in e.OldItems)
                {
                    if (ReferenceEquals(item.Visitor, this))
                    {
                        item.Visitor = null;
                    }
                }
            }
        }

        #endregion

    }
}
