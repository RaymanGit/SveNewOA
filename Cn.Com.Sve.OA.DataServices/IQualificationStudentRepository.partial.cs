using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Cn.RaymanLee.Patterns;
using Cn.Com.Sve.OA.Entities;
using Cn.Com.Sve.OA.Entities.Criteria;

namespace Cn.Com.Sve.OA.DataServices {
    public partial interface IQualificationStudentRepository  : IRepository<QualificationStudent,int> {
    	IEnumerable<QualificationStudent> FindByClazz(string clazz);
    	IEnumerable<QualificationStudent> FindByTargetSchoolName(string targetSchoolName);
    	IEnumerable<QualificationStudent> FindBySignUpTime(Nullable<System.DateTime> signUpTime);
    	IEnumerable<QualificationStudent> FindBySeqNo(string seqNo);
    	IEnumerable<QualificationStudent> FindByTargetProfession(string targetProfession);
    	IEnumerable<QualificationStudent> FindByTargetLevel(string targetLevel);
    	IEnumerable<QualificationStudent> FindByStudentNo(string studentNo);
    	IEnumerable<QualificationStudent> FindByName(string name);
    	IEnumerable<QualificationStudent> FindBySex(string sex);
    	IEnumerable<QualificationStudent> FindByBirthday(Nullable<System.DateTime> birthday);
    	IEnumerable<QualificationStudent> FindByJiGuang(string jiGuang);
    	IEnumerable<QualificationStudent> FindByIdCardNo(string idCardNo);
    	IEnumerable<QualificationStudent> FindByMinZu(string minZu);
    	IEnumerable<QualificationStudent> FindByZhengZhiMianMao(string zhengZhiMianMao);
    	IEnumerable<QualificationStudent> FindByIsMarried(string isMarried);
    	IEnumerable<QualificationStudent> FindByHomeAddress(string homeAddress);
    	IEnumerable<QualificationStudent> FindByHuKouAddress(string huKouAddress);
    	IEnumerable<QualificationStudent> FindByCommAddress(string commAddress);
    	IEnumerable<QualificationStudent> FindByPostcode(string postcode);
    	IEnumerable<QualificationStudent> FindByHomeTelephone(string homeTelephone);
    	IEnumerable<QualificationStudent> FindByMobile(string mobile);
    	IEnumerable<QualificationStudent> FindByQQ(string qQ);
    	IEnumerable<QualificationStudent> FindByCompany(string company);
    	IEnumerable<QualificationStudent> FindByTitle(string title);
    	IEnumerable<QualificationStudent> FindByCompanyTelephoneNo(string companyTelephoneNo);
    	IEnumerable<QualificationStudent> FindByBeginWorkTime(Nullable<System.DateTime> beginWorkTime);
    	IEnumerable<QualificationStudent> FindByWorkedYears(Nullable<int> workedYears);
    	IEnumerable<QualificationStudent> FindByHighestEduLevel(string highestEduLevel);
    	IEnumerable<QualificationStudent> FindByHighestQualification(string highestQualification);
    	IEnumerable<QualificationStudent> FindByGraduateDate(Nullable<System.DateTime> graduateDate);
    	IEnumerable<QualificationStudent> FindByGruduateSchool(string gruduateSchool);
    	IEnumerable<QualificationStudent> FindByHighestQualificationNo(string highestQualificationNo);
    	IEnumerable<QualificationStudent> FindByStudyDuration1(string studyDuration1);
    	IEnumerable<QualificationStudent> FindByStudySchool1(string studySchool1);
    	IEnumerable<QualificationStudent> FindByStudyPosition1(string studyPosition1);
    	IEnumerable<QualificationStudent> FindByStudyDuration2(string studyDuration2);
    	IEnumerable<QualificationStudent> FindByStudySchool2(string studySchool2);
    	IEnumerable<QualificationStudent> FindByStudyPosition2(string studyPosition2);
    	IEnumerable<QualificationStudent> FindByStudyDuration3(string studyDuration3);
    	IEnumerable<QualificationStudent> FindByStudySchool3(string studySchool3);
    	IEnumerable<QualificationStudent> FindByStudyPosition3(string studyPosition3);
    	IEnumerable<QualificationStudent> FindByMemberRelType1(string memberRelType1);
    	IEnumerable<QualificationStudent> FindByMemberName1(string memberName1);
    	IEnumerable<QualificationStudent> FindByMemberMianMao1(string memberMianMao1);
    	IEnumerable<QualificationStudent> FindByMemberCompany1(string memberCompany1);
    	IEnumerable<QualificationStudent> FindByMemberPosition1(string memberPosition1);
    	IEnumerable<QualificationStudent> FindByMemberMobile1(string memberMobile1);
    	IEnumerable<QualificationStudent> FindByMemberRelType2(string memberRelType2);
    	IEnumerable<QualificationStudent> FindByMemberName2(string memberName2);
    	IEnumerable<QualificationStudent> FindByMemberMianMao2(string memberMianMao2);
    	IEnumerable<QualificationStudent> FindByMemberCompany2(string memberCompany2);
    	IEnumerable<QualificationStudent> FindByMemberPosition2(string memberPosition2);
    	IEnumerable<QualificationStudent> FindByMemberMobile2(string memberMobile2);
    	IEnumerable<QualificationStudent> FindByRemark(string remark);
    	IEnumerable<QualificationStudent> FindByStatus(string status);
    	IEnumerable<QualificationStudent> FindByConsultant(string consultant);
    	IEnumerable<QualificationStudent> FindByReferrer(string referrer);
    	IEnumerable<QualificationStudent> FindByReferrerMobile(string referrerMobile);
    	IEnumerable<QualificationStudent> FindByReferrerQQ(string referrerQQ);
    	IEnumerable<QualificationStudent> FindByMatriculateTime(Nullable<System.DateTime> matriculateTime);
    	IEnumerable<QualificationStudent> FindByNetUserName(string netUserName);
    	IEnumerable<QualificationStudent> FindByNetPassword(string netPassword);
    	IEnumerable<QualificationStudent> FindByStudyType(string studyType);
    	IEnumerable<QualificationStudent> FindBySubmitStatus(string submitStatus);
    	IEnumerable<QualificationStudent> FindByOfferStatus(string offerStatus);
    	IEnumerable<QualificationStudent> FindByPayStatus(string payStatus);
    	IEnumerable<QualificationStudent> FindByPaperStatus(string paperStatus);
    	IEnumerable<QualificationStudent> FindByOldOAId(string oldOAId);
    	IEnumerable<QualificationStudent> FindByPhoto1(string photo1);
    	IEnumerable<QualificationStudent> FindByPhoto2(string photo2);
    	IEnumerable<QualificationStudent> FindByPhoto3(string photo3);
    	IEnumerable<QualificationStudent> FindByCriteria(QualificationStudentCriteria c);
    }
}
